//Alphabetically Sorted
//A word is alphabetically sorted if all of the letters in it are in consecutive alphabetical order. Some examples of alphabetically sorted words: abhors (a is before b, b is before h, h is before o, etc.), ghost, accent, hoop.
//
//Create a function that takes in a sentence as input and returns true if there is at least one alphabetically sorted word inside that has a minimum length of 3.
//
//Examples
//isAlphabeticallySorted("Paula has a French accent.") ➞ true
//// "accent" is alphabetically sorted.
//
//isAlphabeticallySorted("The biopsy returned negative results.") ➞ true
//// "biopsy" is alphabetically sorted.
//
//isAlphabeticallySorted("She sells sea shells by the sea shore.") ➞ false



#include<bits/stdc++.h>

using namespace std;

bool isAlphabeticallySorted(std::string s)
{

	vector<string>v;

	int i=0;

	string temp="";
	while(s[i]!='.')
    {


        if(s[i]==' ')
        {

            v.push_back(temp);
            temp="";



        }
        else
        {
             temp+=s[i];
        }


        if(s[i+1]=='.')
        {

             v.push_back(temp);
        }





        i++;
    }


     string finalans="";

	for(int i=0;i<v.size();i++)
    {
        string temp=v[i];
        bool flag=true;
        for(int i=1;i<temp.size();i++)
        {
            if(temp[i]>=temp[i-1])
            {
                continue;
            }
            else
            {
                flag=false;
            }
        }

        if(flag)
        {

            finalans=temp;

        }

    }


 


    if(finalans.size()==0)
    {
        return false;
    }
    else if(finalans.size()<3)
    {
        return false;
    }


     return true;
}

int main()
{


  string s;
  cout<<"Enter the string"<<endl;

   getline(cin,s);


   if(isAlphabeticallySorted(s))
   {
       cout<<"True"<<endl;
   }
   else
   {
       cout<<"False"<<endl;
   }









    return 0;
}
