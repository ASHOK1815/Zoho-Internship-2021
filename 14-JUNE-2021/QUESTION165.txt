//Maximize the First Number

//Write a function that makes the first number as large as possible by swapping out its digits for digits in the second number.
//
//To illustrate:
//
//maxPossible(9328, 456) ➞ 9658
//// 9658 is the largest possible number built from swaps from 456.
//// 3 replaced with 6 and 2 replaced with 5.
//Examples
//maxPossible(523, 76) ➞ 763
//
//maxPossible(9132, 5564) ➞ 9655
//
//maxPossible(8732, 91255) ➞ 9755


#include<bits/stdc++.h>

using namespace std;

int maxPossible(int n1, int n2)
{

   string N1=to_string(n1);
   string N2=to_string(n2);

   sort(N2.rbegin(),N2.rend());

   for(int i=0;i<N2.size();i++)
   {
       for(int j=0;j<N1.size();j++)
       {
           if(N2[i]>N1[j])
           {
               N1[j]=N2[i];
               break;
           }
       }

   }


	return atoi(N1.c_str());
}

int main()
{

   int n1,n2;
   cout<<"Enter the number1 and number2 "<<endl;
   cin>>n1>>n2;


   cout<<maxPossible(n1,n2);




    return 0;
}
