//Books and Book Ends
//
//Suppose a pair of identical characters serve as book ends for all characters in between them.
//Write a function that returns the total number of unique characters (books, so to speak) between all pairs of book ends.
//
//The function will look like:
//
//countUniqueBooks("stringSequence", "bookEnd")
//
//Examples
//
//countUniqueBooks("AZYWABBCATTTA", 'A') ➞ 4
//
//// 1st bookend group: "AZYWA" : 3 unique books: "Z", "Y", "W"
//// 2nd bookend group: "ATTTA": 1 unique book: "T"
//
//countUniqueBooks("$AA$BBCATT$C$$B$", '$') ➞ 3
//
//countUniqueBooks("ZZABCDEF", 'Z') ➞ 0


#include<bits/stdc++.h>

using namespace std;

int countUniqueBooks(std::string str, char bookend)
{
    set<int>ans;
    for(int i=0;i<str.size();i++)
    {
        if(str[i]==bookend)
        {
            i++;
            while(str[i]!=bookend)
            {

                ans.insert(str[i]);
                i++;
            }

        }


    }



    return ans.size();



}
int main()
{

    string str;
    cout<<"ENTER THE STRING"<<endl;
    cin>>str;

    char bookend;
    cout<<"ENTER THE CHARACTER"<<endl;
    cin>>bookend;


    cout<<countUniqueBooks(str,bookend);


    return 0;
}
