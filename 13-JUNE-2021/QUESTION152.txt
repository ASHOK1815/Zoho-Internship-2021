//All Pairs that Sum to Target
//Create a function that returns all pairs of numbers in an array that sum to a target. Sort the pairs in ascending order with respect to the smaller number, then order each pair in this order: [smaller, larger].
//
//Examples
//allPairs([2, 4, 5, 3], 7) ➞ [[2, 5], [3, 4]]
//// 2 + 5 = 7, 3 + 4 = 7
//
//allPairs([5, 3, 9, 2, 1], 3) ➞ [[1, 2]]
//
//allPairs([4, 5, 1, 3, 6, 8], 9) ➞ [[1, 8], [3, 6], [4, 5]]
//// Sorted: 1 < 3 < 4; each pair is ordered [smaller, larger]


#include<bits/stdc++.h>

using namespace std;

std::vector<std::vector<int>> allPairs(std::vector<int> arr, int target)
{

    vector<vector<int>>ans;
    for(int i=0;i<arr.size()-1;i++)
    {
        for(int j=i+1;j<arr.size();j++)
        {
            if(arr[i]+arr[j]==target)
            {
                ans.push_back({arr[i],arr[j]});
            }
        }
    }

    return ans;

}

int main()
{

   int n;
   cout<<"Enter the size of arr vector"<<endl;
   cin>>n;

   vector<int>arr;


   for(int i=0;i<n;i++)
   {
       int a;
       cin>>a;
       arr.push_back(a);
   }

    int target;
    cout<<"Enter the target"<<endl;
    cin>>target;

    vector<vector<int>>ans=allPairs(arr,target);



    for(int i=0;i<ans.size();i++)
    {
        for(int j=0;j<ans[i].size();j++)
        {
            cout<<ans[i][j]<<" ";
        }
        cout<<endl;
    }





    return 0;
}
