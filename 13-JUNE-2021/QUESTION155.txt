//Group Monotonicity
//Create a function which returns the indices where the monotonicity of a 1-D array changes. If there are none, return an empty array. A monotonic array is one that is either non-increasing or non-decreasing.
//
//Examples
//groupMonotonic([0, 1]) ➞ []
//
//groupMonotonic([0, 2, 1]) ➞ [1]
//
//groupMonotonic([0, 1, 1, 0]) ➞ [2]


#include<bits/stdc++.h>

using namespace std;

std::vector<int> groupMonotonic(std::vector<int> arr)
{
	vector<int>ans;


	int i=1;
	int n=arr.size()-1;
	while(i<n)
    {
        if((arr[i]-arr[i-1])*(arr[i+1]-arr[i])<0)
        {
            ans.push_back(i);
        }

        i++;
    }



	return ans;
}

int main()
{

  int n;
  cout<<"Enter the size of the arr vector"<<endl;
  cin>>n;


  vector<int>arr;


  for(int i=0;i<n;i++)
  {
      int a;
      cin>>a;
      arr.push_back(a);
  }

  vector<int>ans=groupMonotonic(arr);


  for(int i=0;i<ans.size();i++)
  {
      cout<<ans[i]<<" ";
  }








}
