//Repeating Cycle

//Below is an example of a repeating cycle.
//
//isRepeatingCycle([1, 2, 3, 1, 2], 3) => true
//// Since the first two elements of [1, 2, 3] equals [1, 2]
//Below is an example of a non-repeating cycle.
//
//isRepeatingCycle([1, 2, 3, 1, 3], 3) => false
//// Since [1, 2, 3] != [1, 3]

#include<bits/stdc++.h>
using namespace std;

bool isRepeatingCycle(std::vector<int> arr, int length) {

	int n=arr.size();

	if(length >=n)
		return true;
	for(int i = 0; i < n-length; i++)
	{
		if(arr[i+length] != arr[i])
		return false;
	}
	return true;



}

int main()
{
    int n;
    cin>>n;

   vector<int>arr;
    for(int i=0;i<n;i++)
    {
        int a;
        cin>>a;
        arr.push_back(a);
    }

    int length;
    cin>>length;

    if(isRepeatingCycle(arr,length))
    {
        cout<<"Repeating"<<endl;
    }
    else
    {
        cout<<"Not Repeating"<<endl;
    }



}
