//Rolling Cipher

//Write a function that accepts a string and an n and returns a cipher by rolling each character forward (n > 0) or backward (n < 0) n times.
//
//Note: Think of the letters as a connected loop, so rolling a backwards once will yield z, and rolling z forward once will yield a.
//If you roll 26 times in either direction, you should end up back where you started.

#include<bits/stdc++.h>
using namespace std;


std::string rollingCipher(std::string s, int n) {

   string a;
   int k;
  for (int i=0; i<s.size();i++)
	{
	  k = s[i]+n;

	if (k>122)
    {
        k=k-26;
    }
	else if(k<97)
    {
            k=k+26;
    }
    
	   a+=k;
	}
  return a;
}





int main()
{

    string s;
    cin>>s;

    int n;
    cin>>n;

    cout<<rollingCipher(s,n);





    return 0;
}
