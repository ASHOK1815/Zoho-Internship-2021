//Calculate the Shortest Distance Between Two Points
//Create a function that takes a string of four numbers. These numbers represent two separate points on a graph known as the x-axis (horizontal axis) and y-axis (vertical axis).
//
//The order of coordinates in the string corresponds as follows:
//
//"x1,y1,x2,y2"
//Calculate the distance between x and y.
//
//Examples
//shortestDistance("1,1,2,1") ➞ 1.00
//
//shortestDistance("1,1,3,1") ➞ 2.00
//
//shortestDistance("-5,1,3,1") ➞ 8.00
//
//shortestDistance("-5,2,3,1") ➞ 8.06


#include<bits/stdc++.h>
using namespace std;




double shortestDistance(std::string s)
{

   vector<int>ans;

   s+=",";

   int i=0;
   string temp="";
   while(s[i]!='\0')
   {
       if(s[i]==',')
       {


           ans.push_back(atoi(temp.c_str()));
           temp="";
           i++;

       }

       if(s[i]=='\0')
       {
           break;
       }

       temp+=s[i];

       i++;

   }


   double finalresult=sqrt(abs(ans[2]-ans[0])*abs(ans[2]-ans[0])+abs(ans[3]-ans[1])*abs(ans[3]-ans[1]));




   return finalresult;
}

int main()
{

    string s;
    cin>>s;

    double x=shortestDistance(s);

    printf("%.2f",x);



    return 0;
}
