//
//Matrix Multiplication
//The main condition of matrix multiplication is that the number of columns of the 1st matrix must equal to the number of rows of the 2nd one.
//As a result of multiplication you will get a new matrix that has the same quantity of rows as the 1st one has and the same quantity of columns as the 2nd one.
//For example if you multiply a matrix of "n" * "k" by "k" * "m" size you"ll get a new one of "n" * "m" dimensions.
//Create a function that takes 2 x 2D array (matrix A, matrixB) as an argument and returns a 2D array (matrix C). C = A*B.
//
//If the number of columns of the 1st matrix isn't equal to the number of rows of the 2nd: return [[]].
//Or the number of rows of the 1st matrix isn't equal to the number of columns of the 2nd: return [[]].


#include<bits/stdc++.h>

using namespace std;

vector<vector<int>> mul(vector<vector<int>> A1, vector<vector<int>> A2)
{

    int n=A1.size();
    int m=A1[0].size();
    vector<vector<int>>temp;



    for(int i=0;i<n;i++)
    {
        for(int j=0;j<n;j++)
        {
            temp[i][j]=0;
            for(int k=0;k<n;k++)
            {
                int value=A1[i][k]*A2[k][j];
                temp[i][j]+=value;
            }
        }
    }



    return temp;

}
int main()
{
    int n;

    cin>>n;


    vector<vector<int>>A1;

    cout<<"Enter the element in vector 1"<<endl;

    for(int i=0;i<n;i++)
    {
        vector<int>temp;

        for(int j=0;j<n;j++)
        {
            int a;
            cin>>a;
            temp.push_back(a);
        }
        A1.push_back(temp);
    }


    cout<<"Enter the element in vector 2"<<endl;
    vector<vector<int>>A2;

    for(int i=0;i<n;i++)
    {
        vector<int>temp;

        for(int j=0;j<n;j++)
        {
            int a;
            cin>>a;
            temp.push_back(a);
        }
        A2.push_back(temp);
    }

    vector<vector<int>>Ans=mul(A1,A2);


    for(int i=0;i<Ans.size();i++)
    {
        for(int j=0;j<Ans[i].size();j++)
        {
            cout<<Ans[i][j]<<" ";
        }
        cout<<endl;
    }



    return 0;
}
