//Get the Lucky Number
//
//A lucky number is a number of a sequence generated by a sieve algorithm: if a number in the positive integers series survives to the sieve filtering algorithm,
//it's lucky and survives, otherwise it disappears from the sequence.
//
//First you must obtain an array of numbers, from 1 to the needed size.
//First number is 1 and it survives: next to him there is number 2,
//that becomes the sieve's filter: every second number in the list (counting from 1) has to be filtered (as to say every even number).
//After this step, the next number to survive after 1 is 3: eliminate every third number in the list (counting from 1).
//After this step, the next number to survive after 3 is 7: eliminate every seventh number in the list.
//Repeat the steps incrementing the filter condition at every step (as to say that the sieve filter of a new step is equal to the first number greater
//                                                                  than the previous step last lucky number) until there are no numbers to eliminate in the list.
//See the example below for a given size = 25 and nth = 5.
//
//Step 1: Generate a list from 1 to size.
//
//1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25
//Step 2: First sieve filter is 2: every second number from the start has to be eliminated.
//
//1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25
//Step 3: Sieve filter is now 3: every third number from the start has to be eliminated.
//
//1, 3, 5, 7, 9, 11, 13, 15, 17, 19, 21, 23, 25
//Step 4: Sieve filter is now 7: every seventh number from the start has to be eliminated.
//
//1, 3, 7, 9, 13, 15, 19, 21, 25
//Step 5: Sieve filter is now 9: every ninth number has to be eliminated, but our list now contains only 8 numbers and so the algorithm ends.
//The nth number of the sequence is 13.


#include<bits/stdc++.h>
using namespace std;

int getLuckyNumber(int Size, int n)
{
	vector<int> v(Size);
	for(int i=0; i<Size;i++)
	{
	    v[i]=i+1;
	}

	int k=1,s=2;
	
	
	while(v.size()>=s)
    {
		s=v[k];
		for(int i=v.size()-1; i>=0;i--)
		{

			if(i%s==s-1)
            {
               v.erase(v.begin()+i);
            }


		}
		k +=s==v[k];
	}
	return v[n-1];
}


int main()
{



    cout<<"Enter the size of the array"<<endl;
    int Size;
    cin>>Size;

    cout<<"Enter the nth element"<<endl;
    int n;
    cin>>n;



    cout<<getLuckyNumber(Size,n);


    return 0;
}
