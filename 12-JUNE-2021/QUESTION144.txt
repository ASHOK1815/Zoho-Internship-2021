//Minimum Swaps to Alternate a Binary String
//Create a function that returns the minimum number of swaps it takes to transform a binary string into a string of alternating 0s and 1s. A swap is switching from a 0 to a 1 or vice versa.
//
//Examples
//minSwaps("010010111") ➞ 4
//
//// Two possible conversions:
////   1. "101010101" (4 swaps)
////   2. "010101010" (5 swaps)
//
//minSwaps("10101010") ➞ 0
//
//minSwaps("10010") ➞ 2

#include<bits/stdc++.h>

using namespace std;

int minSwaps(std::string str)
{
    int counter1=0;
    int counter2=0;

    for(int i=0;i<str.size();i++)
    {
        if(i&1 and str[i]=='0')counter1++;
        if(i%2==0 and str[i]=='1')counter1++;
        if(i&1 and str[i]=='1')counter2++;
        if(i%2==0 and str[i]=='0')counter2++;
    }

	return min(counter1,counter2);
}

int main()
{


   string s;
   cout<<"Enter the string"<<endl;
   cin>>s;

   cout<<minSwaps(s);

   return 0;

}
